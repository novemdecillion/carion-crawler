/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.carioncrawler.adapter.jooq.tables.pojos


import io.github.novemdecillion.carioncrawler.adapter.db.CrawledStatus
import io.github.novemdecillion.carioncrawler.adapter.jooq.tables.interfaces.ICrawledPage

import java.time.OffsetDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class CrawledPageEntity(
    override var url: String? = null, 
    override var status: CrawledStatus? = null, 
    override var note: String? = null, 
    override var exclude: Boolean? = null, 
    override var searchedAt: OffsetDateTime? = null, 
    override var crawledAt: OffsetDateTime? = null, 
    override var html: String? = null, 
    override var `data`: ByteArray? = null
): ICrawledPage {


    override fun toString(): String {
        val sb = StringBuilder("CrawledPageEntity (")

        sb.append(url)
        sb.append(", ").append(status)
        sb.append(", ").append(note)
        sb.append(", ").append(exclude)
        sb.append(", ").append(searchedAt)
        sb.append(", ").append(crawledAt)
        sb.append(", ").append(html)
        sb.append(", ").append("[binary...]")

        sb.append(")")
        return sb.toString()
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    override fun from(from: ICrawledPage) {
        url = from.url
        status = from.status
        note = from.note
        exclude = from.exclude
        searchedAt = from.searchedAt
        crawledAt = from.crawledAt
        html = from.html
        `data` = from.`data`
    }

    override fun <E : ICrawledPage> into(into: E): E {
        into.from(this)
        return into
    }
}
