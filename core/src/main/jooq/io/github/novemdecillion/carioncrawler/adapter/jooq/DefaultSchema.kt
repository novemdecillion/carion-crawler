/*
 * This file is generated by jOOQ.
 */
package io.github.novemdecillion.carioncrawler.adapter.jooq


import io.github.novemdecillion.carioncrawler.adapter.jooq.tables.CrawledPageTable
import io.github.novemdecillion.carioncrawler.adapter.jooq.tables.FlywaySchemaHistoryTable
import io.github.novemdecillion.carioncrawler.adapter.jooq.tables.SearchKeywordTable
import io.github.novemdecillion.carioncrawler.adapter.jooq.tables.SearchedPageTable
import io.github.novemdecillion.carioncrawler.adapter.jooq.tables.StateTable

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA = DefaultSchema()
    }

    /**
     * The table <code>crawled_page</code>.
     */
    val CRAWLED_PAGE get() = CrawledPageTable.CRAWLED_PAGE

    /**
     * The table <code>flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY get() = FlywaySchemaHistoryTable.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>search_keyword</code>.
     */
    val SEARCH_KEYWORD get() = SearchKeywordTable.SEARCH_KEYWORD

    /**
     * The table <code>searched_page</code>.
     */
    val SEARCHED_PAGE get() = SearchedPageTable.SEARCHED_PAGE

    /**
     * The table <code>state</code>.
     */
    val STATE get() = StateTable.STATE

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        CrawledPageTable.CRAWLED_PAGE,
        FlywaySchemaHistoryTable.FLYWAY_SCHEMA_HISTORY,
        SearchKeywordTable.SEARCH_KEYWORD,
        SearchedPageTable.SEARCHED_PAGE,
        StateTable.STATE
    )
}
